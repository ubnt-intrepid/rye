name: Workflow

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_VERBOSE: true
  RUST_BACKTRACE: full

jobs:
  Test:
    strategy:
      matrix:
        conf:
          - { toolchain: stable  , os: ubuntu-18.04   , components: "rustfmt, clippy" , coverage: true }
          - { toolchain: beta    , os: ubuntu-18.04   }
          - { toolchain: nightly , os: ubuntu-18.04   }
          - { toolchain: 1.40.0  , os: ubuntu-18.04   } # minimum supported toolchain
          - { toolchain: stable  , os: macos-latest   }
          - { toolchain: stable  , os: windows-latest }

    runs-on: ${{ matrix.conf.os }}
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.conf.toolchain }}
        components: ${{ matrix.conf.components }}
        override: true

    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    # - name: Cache cargo build
    #   uses: actions/cache@v1
    #   with:
    #     path: target
    #     key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Run format check
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
      if: contains(matrix.conf.components, 'rustfmt')

    - name: Run clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --all-targets
      if: contains(matrix.conf.components, 'clippy')

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Install cargo-tarpaulin
      run: |
        curl -L https://github.com/xd009642/tarpaulin/releases/download/0.10.0/cargo-tarpaulin-0.10.0-travis.tar.gz | tar zxf -
        mkdir -pv $HOME/.cargo/bin
        mv -v ./cargo-tarpaulin $HOME/.cargo/bin
        echo ::add-path::$HOME/.cargo/bin
      if: matrix.conf.coverage == true

    - name: Run tarpaulin
      uses: actions-rs/cargo@v1
      with:
        command: tarpaulin
        args: --verbose --workspace --out Xml
      if: matrix.conf.coverage == true

    - name: Send report to Codecov
      uses: codecov/codecov-action@v1.0.3
      if: success() && matrix.conf.coverage == true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
