name: Coverage

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_HUSKY_DONT_INSTALL_HOOKS: true
  CARGO_TERM_VERBOSE: true
  CARGO_INCREMENTAL: '0'
  CARGO_NET_OFFLINE: true
  RUST_BACKTRACE: full
  RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'

jobs:
  Coverage:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2020-03-14  # FIXME: switch to the latest nightly
        override: true

    - name: Generate Cargo.lock
      uses: actions-rs/cargo@v1
      with:
        command: generate-lockfile
      env:
        CARGO_NET_OFFLINE: false
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Fetch cargo dependencies
      uses: actions-rs/cargo@v1
      with:
        command: fetch
      env:
        CARGO_NET_OFFLINE: false

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace

    - name: Run tests (with frameworks)
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --features frameworks --test test_frameworks

    - name: Install grcov
      run: |
        curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
        mkdir -pv $HOME/.cargo/bin
        mv -v ./grcov $HOME/.cargo/bin
        echo ::add-path::$HOME/.cargo/bin

    - name: Collect coverage
      uses: actions-rs/grcov@v0.1
      id: coverage

    - name: Send report to Codecov
      uses: codecov/codecov-action@v1.0.3
      if: success()
      with:
        file: ./lcov.info
        token: ${{ secrets.CODECOV_TOKEN }}
